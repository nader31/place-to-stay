// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider     = "mysql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

model Listing {
    id          String     @id @default(cuid())
    createdAt   DateTime   @default(now())
    updatedAt   DateTime   @updatedAt
    title       String
    description String     @db.VarChar(1000)
    price       Int
    beds        Int
    baths       Int
    category    Categories
    address     String?
    city        String?
    state       String?
    zip         String?
    country     String?
    userId      String?
    images      Image[]
    bookings    Booking[]
    review      Review[]
    favorite    Favorite[]

    @@index([userId])
}

model Image {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    url       String
    listingId String
    listing   Listing  @relation(fields: [listingId], references: [id])

    @@index([listingId])
}

model Booking {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    startDate DateTime
    endDate   DateTime
    userId    String
    listingId String
    listing   Listing  @relation(fields: [listingId], references: [id])
    status    Status   @default(pending)

    @@index([listingId])
}

enum Status {
    pending
    confirmed
    canceled
}

enum Categories {
    apartment
    house
    hotel
    guesthouse
    hostel
    bnb
    other
}

model Review {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    text      String?  @db.VarChar(1000)
    stars     Int
    listingId String
    listing   Listing  @relation(fields: [listingId], references: [id])
    userId    String

    @@index([listingId])
}

model Favorite {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    userId    String
    listingId String
    listing   Listing  @relation(fields: [listingId], references: [id])

    @@unique([userId, listingId])
    @@index([listingId])
}
